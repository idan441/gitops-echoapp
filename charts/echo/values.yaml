# # Default values for echo.
# # This is a YAML-formatted file.
# # Declare variables to be passed into your templates.

# replicaCount: 1

# image:
#   repository: nginx
#   pullPolicy: IfNotPresent

# imagePullSecrets: []
# nameOverride: ""
# fullnameOverride: ""

# serviceAccount:
#   # Specifies whether a service account should be created
#   create: true
#   # Annotations to add to the service account
#   annotations: {}
#   # The name of the service account to use.
#   # If not set and create is true, a name is generated using the fullname template
#   name:

# podSecurityContext: {}
#   # fsGroup: 2000

# securityContext: {}
#   # capabilities:
#   #   drop:
#   #   - ALL
#   # readOnlyRootFilesystem: true
#   # runAsNonRoot: true
#   # runAsUser: 1000

# service:
#   type: ClusterIP
#   port: 80

# ingress:
#   enabled: false
#   annotations: {}
#     # kubernetes.io/ingress.class: nginx
#     # kubernetes.io/tls-acme: "true"
#   hosts:
#     - host: chart-example.local
#       paths: []
#   tls: []
#   #  - secretName: chart-example-tls
#   #    hosts:
#   #      - chart-example.local

# resources: {}
#   # We usually recommend not to specify default resources and to leave this as a conscious
#   # choice for the user. This also increases chances charts run on environments with little
#   # resources, such as Minikube. If you do want to specify resources, uncomment the following
#   # lines, adjust them as necessary, and remove the curly braces after 'resources:'.
#   # limits:
#   #   cpu: 100m
#   #   memory: 128Mi
#   # requests:
#   #   cpu: 100m
#   #   memory: 128Mi

# nodeSelector: {}

# tolerations: []

# affinity: {}


#Service name - 
#This definition will give the same name to all resources mentioned in this chart. I did it like that to make things simplified and to save time - but sure you can give different names but it will require many variables... 
#WHEN YOU WOULD LIKE AN NGINX-INGRESS SERVER TO PROXY TO THE SERVICE - REFER IT TO THE NAME OF THE SERVICE DEFINED HERE! ( because it will be the name of the clusterIP . ) 
#Make sure this name is not used by any other resource at the k8s cluster! 
name: echoapp1


#Deployment
image: us.gcr.io/ancient-edition-267617/echo #The echo application image, in this case in the google cloud. 


#Deployment
replicas: 2
ports:
  port: 80 #the acces port to the cluster ip which refers to the application. 
  porttarget: 3000 #The application port

###ConfigMap
data: 
  port: "3000"
  loglevel: info
  persist: "true"

#Secret
secret:
  mongodburl: mongodb://root:1234@mongodb:27017/echo #Put the url in its original format, while parsing the value helm will automatically encode it using base64 . 

